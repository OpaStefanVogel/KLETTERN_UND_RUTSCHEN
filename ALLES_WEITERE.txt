ok MERK12 wird gar nicht verwendet (nur für Logfile?), doch, für .indexOf
ok bei DACH ist zwischenzeitlich eine verkehrte Querlinie drin. ok jetzt nach neuem Ebenen entfernen ok
ok gleiche Kanten zusammenfassen auch wieder mit bestimmenden Ebenen und dann die überflüssigen raus
ok deshalb KRED() unbenutzte Ebenen entfernen erst am Schluß
ok in jedem Punkt die überflüssigen Ebenen entfernen und
ok in jeder Kante die überflüssigen Ebenen entfernen beides gleichzeitig mit
  ok zu jedem Punkt die davon ausgehenden Kanten suchen
  ok zu je zwei dieser Kanten die gemeinsamen Ebenen bestimmen
  ok davon die Ebene mit kleinstem Index in "verwendet" merken
  ok Fehlersuch Ebenennummern in P und K nahezu neu bestimmen
  ok "verwendet2" wieder raus und x[2]=x[2]+100 auch und if (x[7]) und if (x[5])
ok bei Klick auf k0 die Ausgabe nicht durch Ebene ersetzen, ok jetzt TQ als Kantenmitte.
ok zur Objektbenennung auch die Objektnummer
ok so gehts weiter: Punkte zusammenfassen schon vor Kanten bestimmen, und schon ok
ok SVG noch etwas einpassen, ok mit viewBox erstmal
ok GOKART enthält Kanten mit drei bestimmenden Ebenen
  ok A Q S D kleiner zeichnen ok mit QASDzoom
  ok Kameraposition kopierbar machen
  ok Beispiel5() mit zwei fast aneinanderliegenden Schneidquadern
    ok doppelte Ebenen nur einfach verwenden, entgegengesetzt doppelte als pj=-pj-1 laufen mit durch
    ok ergibt bei dx=0 auch schon eine überflüssige Kante, klar warum: P1 P2 P3 P5 liegen alle in 2 Ebenen.ok dx=0 geht
    ok überflüssige Ebenen nicht mehr entfernen, sondern als nicht verwendet markieren, ok durch Anzahl der daraufliegenden Kanten
    ok dz=0 wie da weiter? Keine Idee. Aha in KRWG() die bestimmenden Ebenen bestimmen und wenn weniger 2 dann Kante weg.
      ok zumindestens schon GOKART geht damit
      ok Beispiel5() aber nicht, jetzt noch umschreiben auf zwischen die Ebenen schauen 
        ok dabei GOKART mit eps=0.0001 und eps2=0.00001 und TSETZ mit 0.000005
        ok bei DACH die eine Luftkante zuviel
          ok aha, das sind drei Ebenen durch eine Kante. p[i][0..2] neu in KASP
        ok bei DACH fehlt der linke Fußbalken ok war falsch eingegeben
ok bei nochmaligem KENT() keine Sparren, ok nochmaliges KENT() ist nicht nötig
ok nur e0 und e3 sind noch mit 1 Kante zuviel bei GOKART, ok KRWG() merkt sich die verwendeten Ebenen
ok in svg-KPLOT noch width und height anpassen
ok überflüssige Ebenen entfernen ok nicht entfernen sondern markieren
ok warum in KFILL das if drinbeiben muss, ok ist raus
ok wenn sich mehr als 3 Ebenen in einem Punkt schneiden ist nur behelfsweise gelöst ok jetzt besser mit KRWG
ok und fast übereinanderliegende Ebenen zusammenfassen
ok die fast gleichen Ebenen und so auch nach Verschieben und Drehen wieder eintragen.
ok das Zoomen mit Maus mit event.preventDefault() ok in libs/OrbitControls.js 
ok Klick e0 und k0 auch ins SVG zeichnen und ins span eintragen
ok Punkte anklicken scheint ungenau zu sein, vor allem bei nahen Punkten ok .multiplyScalar(1/pp.z) hat gefehlt
  nö dazu in raycast minimaler Winkel statt minimaler Abstand, nö, vorerst nicht nötig
  ok den Faktor 1.25 wovon der ist und wie groß eigentlich, ok das war 1/z von dem z=0.8... jetzt pp.z=1;
ok raycast() nur bei dem einem Objekt wenn Button "einzeln"
.. raycast() schon bei mousemove
.. KRWG mit eps=0.001 statt 0.0001, weil sonst zu nahe dran, das muss noch ohne eps und eps2 zu machen gehen
.. bei FLÄCHEN der p1
.. Anfangswerte schon vor init() setzen
.. Eingabe schrittweise weitergehen
.. anstelle Würfel ein xyz-Koordinatensystem
.. überhaupt P[0..2] raus oder auch nicht
.. Punkte ohne Kanten auch löschen
.. ob if (P[5]) noch notwendig ist, irgendwann alert("kein...") wieder heraus
.. für die Kantenfluchtlinien auch alle ei,ej durchgehen
.. wie es zu dem U==[0,0,0,0] kommt, parallel vielleicht?
.. bei AUFDERKANTE muß wohl ein AUFDERFLAECHE auch mit dazu
.. Keil auch nur behelfsmäßig in GERADEXEBENE, bis jetzt nur 2 Ebenen, Button "merken" mit mehr als 2 Ebenen
.. doppeltes TEbeneASD() vermeiden
