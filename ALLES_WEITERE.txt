ok MERK12 wird gar nicht verwendet (nur für Logfile?), doch, für .indexOf
ok bei DACH ist zwischenzeitlich eine verkehrte Querlinie drin. ok jetzt nach neuem Ebenen entfernen ok
ok gleiche Kanten zusammenfassen auch wieder mit bestimmenden Ebenen und dann die überflüssigen raus
ok deshalb KRED() unbenutzte Ebenen entfernen erst am Schluß
ok in jedem Punkt die überflüssigen Ebenen entfernen und
ok in jeder Kante die überflüssigen Ebenen entfernen beides gleichzeitig mit
  ok zu jedem Punkt die davon ausgehenden Kanten suchen
  ok zu je zwei dieser Kanten die gemeinsamen Ebenen bestimmen
  ok davon die Ebene mit kleinstem Index in "verwendet" merken
  ok Fehlersuch Ebenennummern in P und K nahezu neu bestimmen
  ok "verwendet2" wieder raus und x[2]=x[2]+100 auch und if (x[7]) und if (x[5])
ok bei Klick auf k0 die Ausgabe nicht durch Ebene ersetzen, ok jetzt TQ als Kantenmitte.
ok zur Objektbenennung auch die Objektnummer
ok so gehts weiter: Punkte zusammenfassen schon vor Kanten bestimmen, und schon ok
ok SVG noch etwas einpassen, ok mit viewBox erstmal
.. GOKART enthält Kanten mit drei bestimmenden Ebenen
  ok A Q S D kleiner zeichnen ok mit QASDzoom
  ok Kameraposition kopierbar machen
  .. Beispiel5() mit zwei fast aneinanderliegenden Schneidquadern
    .. ergibt bei dx=0 auch schon eine überflüssige Kante, klar warum: P1 P2 P3 P5 liegen alle in 2 Ebenen.
    .. überflüssige Ebenen nicht mehr entfernen, sondern als nicht verwendet markieren
  .. Anfangswerte schon vor init() setzen
  .. Eingabe schrittweise weitergehen
  .. Punkte anklicken scheint ungenau zu sein, vor allem bei nahen Punkten
    .. dazu in raycast minimaler Winkel statt minimaler Abstand
  .. das Zoomen mit Maus mit event.preventDefault()
.. überhaupt P[0..2] raus oder auch nicht
.. Punkte ohne Kanten auch löschen
.. ob if (P[5]) noch notwendig ist, irgendwann alert("kein...") wieder heraus
.. für die Kantenfluchtlinien auch alle ei,ej durchgehen
.. Klick e0 und k0 auch ins SVG zeichnen
.. Button "merken" mit mehr als 2 Ebenen
